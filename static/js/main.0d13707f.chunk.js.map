{"version":3,"sources":["Components/DonutChartCard.js","App.js","Components/Table.js","reportWebVitals.js","index.js"],"names":["Component","App","state","state_data","total_cases","current_state","getStateData","axios","get","then","res","data","statewise","setState","slice","console","log","currentRow","a","b","c","d","s","document","getElementById","innerHTML","this","class","className","label","value","arrayOf","height","width","emptyColor","outerRadius","color","points","x","y","map","index","id","onMouseOver","confirmed","active","recovered","deaths","lastupdatedtime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0d13707f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DonutChart from 'react-donut-chart';\r\nimport './DonutChartCard.css';\r\nimport LineChart from 'react-linechart';\r\n\r\nexport class DonutChartCard extends Component {\r\n    state = {\r\n        covid_data: null,\r\n    }\r\n    componentDidMount() {\r\n        // alert('hello')\r\n        alert(this.props.covid_data)\r\n        console.log(this.props)\r\n       \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Typical usage (don't forget to compare props):\r\n        if (this.props !== prevProps) {\r\n           this.state.covid_data = this.props.covid_data\r\n           alert(this.props.covid_data)\r\n           console.log(this.props)\r\n        }\r\n      }\r\n\r\n    render() {\r\n        \r\n        let active = 7198;\r\n        let deceased = 617\r\n        let recovered=24832;\r\n        let total = 382920\r\n\r\n        const data = [\r\n            {\t\t\t\t\t\t\t\t\t\r\n                color: \"steelblue\", \r\n                points: [{x: 1, y: 2}, {x: 3, y: 5}, {x: 7, y: -3}, {x:9,y:8}] \r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"donut__card container row\">\r\n                <div class=\"col-md-7 col-sm-12\" >\r\n                    <DonutChart\r\n                        data={[{\r\n                            label: 'Active',\r\n                            value: active,\r\n\r\n                        },\r\n                        {\r\n                            label: 'Deceased',\r\n                            value: deceased,\r\n                           \r\n                        },\r\n                        {\r\n                            label: 'Recovered',\r\n                            value: recovered,\r\n                            \r\n                        },\r\n                        \r\n                        \r\n                        ]}\r\n                        arrayOf={ '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4caf50', '#8bc34a', '#cddc39', '#ffeb3b', '#ffc107', '#ff9800', '#ff5722', '#795548', '#607d8b' }\r\n                         height={130}\r\n                         width={200}\r\n                         emptyColor={'#ffffff'}\r\n                         \r\n                         outerRadius={0.75}\r\n                        />\r\n                </div>\r\n\r\n                <div class=\"col-md-5 col-sm-12\" >\r\n                     <LineChart \r\n                        width={200}\r\n                        height={150}\r\n                        data={data}\r\n                    />\r\n                    <LineChart \r\n                        width={200}\r\n                        height={150}\r\n                        data={data}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DonutChartCard\r\n","import './App.css';\nimport React, { Component } from 'react'\nimport DonutChartCard from './Components/DonutChartCard';\nimport Table from './Components/Table';\nimport DonutChart from 'react-donut-chart';\nimport LineChart from 'react-linechart';\n\nimport axios from 'axios';\n\nexport class App extends Component {\n\n  state = {\n    state_data: [],\n    total_cases: [],\n    current_state: null\n\n\n  }\n  componentDidMount() {\n    this.getStateData();\n  }\n\n  getStateData = () => {\n\n    var url = `https://api.covid19india.org/data.json`;\n\n    try {\n      axios.get(url)\n        .then(res => {\n          // console.log(res.data.statewise)\n          let data = res.data.statewise;\n          this.setState({\n            state_data: data.slice(1),\n            total_cases: data[0]\n\n          });\n          console.log(this.state.total_cases)\n        })\n\n    }\n    catch {\n      console.log(\"Wrong with url\")\n    }\n\n  }\n\n  componentDidUpdate() {\n\n  }\n\n  currentRow = (a, b, c, d, s) => {\n     document.getElementById(\"confirmed\").innerHTML = a;\n     document.getElementById(\"active\").innerHTML = b;\n     document.getElementById(\"recovered\").innerHTML = c;\n     document.getElementById(\"deceased\").innerHTML = d;\n     document.getElementById(\"current_state\").innerHTML = s\n  }\n\n  render() {\n    let active = 7198;\n    let deceased = 617\n    let recovered = 24832;\n    let total = 382920\n\n    const data = [\n      {\n        color: \"steelblue\",\n        points: [{ x: 1, y: 2 }, { x: 3, y: 5 }, { x: 7, y: -3 }, { x: 9, y: 8 }]\n      }\n    ];\n    console.log(this.state.state_data)\n    return (\n      <div class=\"container\" >\n        <div class=\"row\">\n\n          {/* Left part */}\n          <div class=\"col-sm-12 col-md-6\">\n            <h3>INDIA COVIE-19 Tracker</h3>\n            <p>Let's all pray to make our Earth Covid-19\n            free soon, Stay Safe and do TheLocate\n           </p>\n\n            <div className=\"donut__card container row\">\n              <div class=\"col-md-7 col-sm-12\" >\n                <DonutChart\n                  data={[{\n                    label: 'Active',\n                    value: active,\n\n                  },\n                  {\n                    label: 'Deceased',\n                    value: deceased,\n\n                  },\n                  {\n                    label: 'Recovered',\n                    value: recovered,\n\n                  },\n\n\n                  ]}\n                  arrayOf={'#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4caf50', '#8bc34a', '#cddc39', '#ffeb3b', '#ffc107', '#ff9800', '#ff5722', '#795548', '#607d8b'}\n                  height={130}\n                  width={200}\n                  emptyColor={'#ffffff'}\n\n                  outerRadius={0.75}\n                />\n              </div>\n\n              <div class=\"col-md-5 col-sm-12\" >\n                <LineChart\n                  width={200}\n                  height={150}\n                  data={data}\n                />\n\n              </div>\n            </div>\n\n            {/*      Table              */}\n            <div className=\"table__outer__container container row\">\n              <div className=\"table__container table__container_heading container row \">\n                <div>STATE/UT</div>\n                <div>CONFIRMED</div>\n                <div>ACTIVE</div>\n                <div>RECOVERED</div>\n                <div>DECEASED</div>\n              </div>\n              {this.state.state_data.map((data, index) => (\n                <div id=\"table__container\" className=\"table__container container row\" onMouseOver={() => { this.currentRow(data.confirmed, data.active, data.recovered, data.deaths, data.state) }}>\n                  <div className=\"table__state\">{data.state}</div>\n                  <div className=\"table__confirmed\">{data.confirmed}</div>\n                  <div className=\"table__active\">{data.active}</div>\n                  <div className=\"table__recovered\">{data.recovered}</div>\n                  <div className=\"table__deaths\">{data.deaths}</div>\n                </div>\n              ))}\n            </div>\n\n          </div>\n\n          {/* Right part */}\n          <div class=\"col-sm-12 col-md-6\">\n            <h3>INDIA MAP</h3>\n            <p> HOVER OVER A STATE FOR MORE DETAILS\n           </p>\n            <div className=\"map__card container\">\n              <div className=\"total___cases__card row\">\n                <div className=\"confirmed col-md-3 col-sm-6\">\n                  <div>\n                    Confirmed\n                  </div>\n                  <div id=\"confirmed\">\n                    {this.state.total_cases.confirmed}\n                  </div>\n                </div>\n                <div className=\"active col-md-3 col-sm-6\">\n                  <div >\n                    Active\n                  </div>\n                  <div id=\"active\">\n                    {this.state.total_cases.active}\n                  </div>\n                </div>\n                <div className=\"recovered col-md-3 col-sm-6\">\n                  <div>\n                    Recovered\n                  </div>\n                  <div id=\"recovered\">\n                    {this.state.total_cases.recovered}\n                  </div>\n                </div>\n                <div className=\"deceased col-md-3 col-sm-6\">\n                  <div>\n                    Deceased\n                  </div>\n                  <div id=\"deceased\">\n                    {this.state.total_cases.deaths}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"last__updated\">\n              <div id=\"current_state\" className=\"current__state\">\n                 {this.state.current_state}\n              </div>\n                <div>\n                  <div className=\"first\">LAST UPDATED</div>\n                  <div className=\"second\">{this.state.total_cases.lastupdatedtime}</div>\n                </div>\n\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n","import { map } from 'jquery';\r\nimport React, { Component } from 'react'\r\nimport './Table.css';\r\n\r\nimport axios from 'axios';\r\n\r\nexport class Table extends Component {\r\n\r\n    state = {\r\n        state_data: [],\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getStateData();\r\n    }\r\n\r\n    getStateData = () => {\r\n\r\n        var url = `https://api.covid19india.org/data.json`;\r\n\r\n        try {\r\n            axios.get(url)\r\n                .then(res => {\r\n                    // console.log(res.data.statewise)\r\n                    let data = res.data.statewise;\r\n                    this.setState({ state_data: data.slice(1)});\r\n                })\r\n        }\r\n        catch {\r\n            console.log(\"Wrong with url\")\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    currentRow=(a,b,c,d)=>{\r\n        alert(a)\r\n    }\r\n\r\n    render() {\r\n\r\n        const state_data = this.state.state_data;\r\n        console.log(state_data)\r\n        return (\r\n            <div className=\"table__outer__container container row\">\r\n                <div className=\"table__container table__container_heading container row \">\r\n                    <div>STATE/UT</div>\r\n                    <div>CONFIRMED</div>\r\n                    <div>ACTIVE</div>\r\n                    <div>RECOVERED</div>\r\n                    <div>DECEASED</div>\r\n                </div>\r\n                {state_data.map((data, index) => (\r\n                    <div id=\"table__container\" className=\"table__container container row \" onMouseOver={()=>{this.currentRow(data.confirmed,data.active, data.recovered,data.deaths)}}>\r\n                        <div>{data.state}</div>\r\n                        <div>{data.confirmed}</div>\r\n                        <div>{data.active}</div>\r\n                        <div>{data.recovered}</div>\r\n                        <div>{data.deaths}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}