{"version":3,"sources":["Components/DonutChartCard.js","Components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["DonutChartCard","state","alert","className","class","Component","Table","state_data","getStateData","axios","get","then","res","data","statewise","setState","slice","console","log","this","map","index","confirmed","active","recovered","deaths","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAiCeA,EA3Bf,4MACIC,MAAQ,GADZ,uDAII,WACIC,MAAM,WALd,gCAQI,WACIA,MAAM,QATd,oBAYI,WACI,OACI,sBAAKC,UAAU,4BAAf,UACI,qBAAKC,MAAM,qBAAX,kBAIA,qBAAKA,MAAM,qBAAX,2BAnBhB,GAAoCC,a,iCC2DrBC,EA3Df,4MAEIL,MAAQ,CACJM,WAAY,IAHpB,EAUIC,aAAe,WAIX,IACIC,IAAMC,IAHH,0CAIEC,MAAK,SAAAC,GAEF,IAAIC,EAAOD,EAAIC,KAAKC,UACpB,EAAKC,SAAS,CAAER,WAAYM,EAAKG,MAAM,QAGnD,SACIC,QAAQC,IAAI,oBAvBxB,uDAMI,WACIC,KAAKX,iBAPb,gCA4BI,cA5BJ,oBAgCI,WAEI,IAAMD,EAAaY,KAAKlB,MAAMM,WAE9B,OADAU,QAAQC,IAAIX,GAER,sBAAKJ,UAAU,wCAAf,UACI,sBAAKA,UAAU,2DAAf,UACI,2CACA,4CACA,yCACA,4CACA,8CAEHI,EAAWa,KAAI,SAACP,EAAMQ,GAAP,OACZ,sBAAKlB,UAAU,kCAAf,UACI,8BAAMU,EAAKZ,QACX,8BAAMY,EAAKS,YACX,8BAAMT,EAAKU,SACX,8BAAMV,EAAKW,YACX,8BAAMX,EAAKY,sBAnDnC,GAA2BpB,aC2BZqB,MA7Bf,WACE,OACE,qBAAKtB,MAAM,YAAX,SACE,sBAAKA,MAAM,MAAX,UAGE,sBAAKA,MAAM,qBAAX,UACE,wDACA,gHAIE,cAAC,EAAD,IACA,cAAC,EAAD,OAKJ,sBAAKA,MAAM,qBAAX,UACE,2CACA,8ECZKuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.bb5c298b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DonutChart from 'react-donut-chart';\r\nimport './DonutChartCard.css';\r\n\r\n\r\nexport class DonutChartCard extends Component {\r\n    state = {\r\n\r\n    }\r\n    componentDidMount() {\r\n        alert('hello')\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        alert('hi')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"donut__card container row\">\r\n                <div class=\"col-md-7 col-sm-12\" >\r\n                    adsf\r\n                </div>\r\n\r\n                <div class=\"col-md-5 col-sm-12\" >\r\n                    jaksdf\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DonutChartCard\r\n","import { map } from 'jquery';\r\nimport React, { Component } from 'react'\r\nimport './Table.css';\r\n\r\nimport axios from 'axios';\r\n\r\nexport class Table extends Component {\r\n\r\n    state = {\r\n        state_data: [],\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getStateData();\r\n    }\r\n\r\n    getStateData = () => {\r\n\r\n        var url = `https://api.covid19india.org/data.json`;\r\n\r\n        try {\r\n            axios.get(url)\r\n                .then(res => {\r\n                    // console.log(res.data.statewise)\r\n                    let data = res.data.statewise;\r\n                    this.setState({ state_data: data.slice(1)});\r\n                })\r\n        }\r\n        catch {\r\n            console.log(\"Wrong with url\")\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const state_data = this.state.state_data;\r\n        console.log(state_data)\r\n        return (\r\n            <div className=\"table__outer__container container row\">\r\n                <div className=\"table__container table__container_heading container row \">\r\n                    <div>STATE/UT</div>\r\n                    <div>CONFIRMED</div>\r\n                    <div>ACTIVE</div>\r\n                    <div>RECOVERED</div>\r\n                    <div>DECEASED</div>\r\n                </div>\r\n                {state_data.map((data, index) => (\r\n                    <div className=\"table__container container row \">\r\n                        <div>{data.state}</div>\r\n                        <div>{data.confirmed}</div>\r\n                        <div>{data.active}</div>\r\n                        <div>{data.recovered}</div>\r\n                        <div>{data.deaths}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table\r\n","import './App.css';\nimport DonutChartCard from './Components/DonutChartCard';\nimport Table from './Components/Table';\n\nfunction App() {\n  return (\n    <div class=\"container\" >\n      <div class=\"row\">\n\n        {/* Left part */}\n        <div class=\"col-sm-12 col-md-6\">\n          <h3>INDIA COVIE-19 Tracker</h3>\n          <p>Let's all pray to make our Earth Covid-19\n          free soon, Stay Safe and do TheLocate\n           </p>\n           \n            <DonutChartCard />\n            <Table />\n     \n        </div>\n\n        {/* Right part */}\n        <div class=\"col-sm-12 col-md-6\">\n          <h3>INDIA MAP</h3>\n          <p> HOVER OVER A STATE FOR MORE DETAILS\n           </p>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}